AWSTemplateFormatVersion: 2010-09-09

Description: Geocode address using Amazon Location Service

Mappings:
  RegionBucketMap:
    us-east-1:
      S3Bucket: tk-location-services-lambda
    us-east-2:
      S3Bucket: tk-location-services-lambda.us-east-2
    us-west-1:
      S3Bucket: tk-location-services-lambda.us-west-1
    us-west-2:
      S3Bucket: tk-location-services-lambda.us-west-2
    ca-central-1:
      S3Bucket: tk-location-services-lambda.ca-central-1
    eu-central-1:
      S3Bucket: tk-location-services-lambda.eu-central-1
    eu-north-1:
      S3Bucket: tk-location-services-lambda.eu-north-1
    eu-west-1:
      S3Bucket: tk-location-services-lambda.eu-west-1
    eu-west-2:
      S3Bucket: tk-location-services-lambda.eu-west-2
    eu-west-3:
      S3Bucket: tk-location-services-lambda.eu-west-3
    sa-east-1:
      S3Bucket: tk-location-services-lambda.sa-east-1
    ap-northeast-1:
      S3Bucket: tk-location-services-lambda.ap-northeast-1
    ap-northeast-2:
      S3Bucket: tk-location-services-lambda.ap-northeast-2
    ap-northeast-3:
      S3Bucket: tk-location-services-lambda.ap-northeast-3
    ap-south-1:
      S3Bucket: tk-location-services-lambda.ap-south-1
    ap-southeast-1:
      S3Bucket: tk-location-services-lambda.ap-southeast-1
    ap-southeast-2:
      S3Bucket: tk-location-services-lambda.ap-southeast-2

Resources:
  PlaceIndex:
    Type: AWS::Location::PlaceIndex
    Properties:
      DataSource: Esri
      DataSourceConfiguration:
        IntendedUse: Storage
      Description: Place index for geocoding addresses
      IndexName:
        Fn::Sub: ${AWS::StackName}-placeindex
      PricingPlan: RequestBasedUsage

  GeocodeAddressLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::FindInMap:
            - RegionBucketMap
            - Ref: AWS::Region
            - S3Bucket
        S3Key: geocode-lambda.zip
      Description: Function to geocode address
      FunctionName:
        Fn::Sub: ${AWS::StackName}-GeocodeAddress
      Handler: lambda_function.lambda_handler
      Role:
        Fn::GetAtt: [GeocodeAddressLambdaRole, Arn]
      Runtime: python3.8
      Timeout: 3
      Environment:
        Variables:
          PLACE_INDEX:
            Ref: PlaceIndex

  GeocodeAddressLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: ${AWS::StackName}-GeocodeAddress-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName:
            Fn::Sub: ${AWS::StackName}-GeocodeAddress-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - geo:SearchPlaceIndexForText
                Resource:
                  - Fn::GetAtt: [PlaceIndex, IndexArn]
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
  
  GeocodeAddressRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      ApiKeySourceType: HEADER
      Description: An API Gateway with a Lambda Integration
      EndpointConfiguration:
        Types:
          - EDGE
      Name: geocode-address-api

  GeocodeAddressApiResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt GeocodeAddressRestApi.RootResourceId
      PathPart: 'geocode'
      RestApiId: !Ref GeocodeAddressRestApi

  GeocodeAddressApiMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: GET
      RequestParameters:
        method.request.querystring.address_line: true
        method.request.querystring.municipality_name: true
        method.request.querystring.state_code: true
        method.request.querystring.post_code: true
        method.request.querystring.country_code: true
      MethodResponses:
        - StatusCode: 200
          ResponseModels: { "application/json": "Empty" }
      Integration:
        ConnectionType: INTERNET
        Credentials: !GetAtt GeocodeAddressApiIamRole.Arn
        IntegrationHttpMethod: POST
        PassthroughBehavior: WHEN_NO_MATCH
        TimeoutInMillis: 29000
        Type: AWS
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GeocodeAddressLambda.Arn}/invocations'
        RequestTemplates:
          "application/json": "{
            #foreach($queryParam in $input.params().querystring.keySet())
            \"$queryParam\": \"$util.escapeJavaScript($input.params().querystring.get($queryParam))\" #if($foreach.hasNext),#end
            #end
          }"
        IntegrationResponses:
          - StatusCode: 200
            ResponseTemplates:
              "application/json": "$input.json('$.body')"
      OperationName: 'geocode_address'
      ResourceId: !Ref GeocodeAddressApiResource
      RestApiId: !Ref GeocodeAddressRestApi
  
  GeocodeAddressApiModel:
    Type: AWS::ApiGateway::Model
    Properties:
      ContentType: 'application/json'
      RestApiId: !Ref GeocodeAddressRestApi
      Schema: {}

  GeocodeAddressApiStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId: !Ref GeocodeAddressApiDeployment
      Description: Lambda API Stage dev
      RestApiId: !Ref GeocodeAddressRestApi
      StageName: 'dev'
  
  GeocodeAddressApiDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn: GeocodeAddressApiMethod
    Properties:
      Description: Lambda API Deployment
      RestApiId: !Ref GeocodeAddressRestApi
  
  GeocodeAddressApiIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: ''
            Effect: 'Allow'
            Principal:
              Service:
                - 'apigateway.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      Path: '/'
      Policies:
        - PolicyName: LambdaAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action: 'lambda:*'
                Resource: !GetAtt GeocodeAddressLambda.Arn

Outputs:
  GeocodeAddressLambda:
    Description: Lambda function name
    Value:
      Ref: GeocodeAddressLambda